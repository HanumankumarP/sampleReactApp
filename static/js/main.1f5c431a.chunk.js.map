{"version":3,"sources":["logo.svg","Info.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Info","props","className","App","fSubmit","e","preventDefault","console","log","datas","state","name","refs","value","email","act","data","push","index","setState","form","reset","focus","fRemove","i","splice","fEdit","title","this","style","border","padding","margin","color","fontWeight","to","href","type","data-toggle","data-target","id","path","component","map","key","onClick","class","ref","placeholder","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1f5c431a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React,{Component} from 'react';\r\n\r\nconst Info=(props)=>{\r\n    return(\r\n        <div>\r\n        <h1> Technologies used to develop this </h1>\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                HTML5 (Simantic Elements)\r\n            </li>\r\n\r\n            <li className=\"list-group-item bg-light\">\r\n                CSS3, Bootstrap4.0\r\n            </li>\r\n\r\n            <li className=\"list-group-item\">\r\n                JavaScript (ES-6)\r\n            </li>\r\n            <li className=\"list-group-item bg-light\">\r\n                ReactJS (16.12.x) along with states,components\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                PWA concepts (serviceWorker, manifest.json, \r\n                Accessibility(color contrast))\r\n            </li>\r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles/bootstrap.css';\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\nimport Info from './Info';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      title:'SAMPLE REACT APPLICATION',\n      act:0,\n      index:'',\n      datas:[]\n    }\n  }\n\n  componentDidMount(){\n    this.refs.name.focus()\n  }\n\n  fSubmit=(e)=>{\n    e.preventDefault();\n    console.log(\"Try\");\n\n    let datas=this.state.datas;\n    let name=this.refs.name.value;\n    let email=this.refs.email.value;\n\n    if(this.state.act===0){\n      let data={\n        name,email\n      }\n      datas.push(data)\n    }else{\n      let index=this.state.index;\n      datas[index].name=name;\n      datas[index].email=email;\n    }\n\n    this.setState({\n      datas:datas,\n      act:0\n    });\n\n    this.refs.form.reset();\n    this.refs.name.focus();\n  }\n\n  fRemove=(i)=>{\n      let datas=this.state.datas;\n      datas.splice(i,1)\n      this.setState({\n        datas:datas\n      })\n  }\n\n  fEdit=(i)=>{\n    let data=this.state.datas[i]\n    this.refs.name.value=data.name;\n    this.refs.email.value=data.email;\n\n    this.refs.name.focus();\n    this.setState({\n      act:1,\n      index:i\n    })\n  }\n  render(){\n  return (\n    <div className=\"container\" style={{border:\"1px solid #4c659a\",padding:\"2%\",margin:\"1% auto\"}}>\n    <div className=\"App\">\n      <h2 style={{color:\"#4c659a\",fontWeight:\"550\"}}> {this.state.title} </h2> <br />\n      {/* Nav Bar */}\n      <Router>\n      <nav className=\"navbar navbar-expand-md bg-primary navbar-dark\">\n\n  <Link to=\"/\" className=\"navbar-brand\" href=\"#\">React Sample</Link>\n\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\">\n        {/* <a className=\"nav-link\" href=\"#\">Link</a>\n         */}\n         <Link to=\"/technologies\" className=\"nav-link\">Technologies Used</Link>\n      </li>\n      {/* <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Link</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Link</a>\n      </li> */}\n    </ul>\n  </div>\n</nav>\n<Switch>\n    {/* <Route exact path=\"/\" component={App}></Route> */}\n    <Route path=\"/technologies\" component={Info} />\n</Switch>\n</Router> \n <br />\n<div className=\"row\"> \n<div className=\"col-md-4\">\n    <div className=\"card effect2\">\n      <div className=\"card-header bg-primary text-light\">\n        Last submitted data\n      </div>\n      <div className=\"card-body\">\n        <ul className=\"list-group\">\n        {\n          this.state.datas.map((data,i)=>\n            <li key={i} className=\"list-group-item\">\n                <span className=\"badge badge-primary\">{i+1}</span> {data.name} <br /> {data.email}\n                <button className=\"btn btn-light text-danger\" onClick={()=>this.fRemove(i)}> <i className=\"fas fa-trash-alt\"></i> </button> <span> &nbsp; </span>\n                <button className=\"btn btn-light text-success\" onClick={()=>this.fEdit(i)}> <i class=\"fas fa-pencil-alt\"></i> </button>\n\n            </li>\n          )}\n          </ul>\n      </div>\n    </div>\n</div>\n\n      <div className=\"col-md-4\">\n          <div className=\"card effect2\">\n            <div className=\"card-header bg-primary text-light\"> Form </div>\n            <div className=\"card-body\">\n              <form ref=\"form\">\n                <input type=\"text\" placeholder=\"Name\" ref=\"name\" className=\"form-control\" /> <br />\n                <input type=\"email\" placeholder=\"E-mail\" ref=\"email\" className=\"form-control\" /> <br />\n                <button className=\"btn btn-primary btn-block\" onClick={(e)=>this.fSubmit(e)}> Submit </button>\n              </form>\n            </div>\n          </div>\n      </div>\n    </div>\n    </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}